//core principle of how redux works

const redux = require("redux");

const counterReducer = (state = { counter: 0 }, action) => {
    // action cause the dispatch to run the intended code
    // default value is required for initialization

    if (action.type === "increment") {
        return {
            counter: state.counter + 1,
        };
    }

    if (action.type === "decrement") {
        return {
            counter: state.counter - 1,
        };
    }

    return state;
};

const store = redux.createStore(counterReducer);

// console.log(store.getState()); // for action not being conducted, counterSubscriber is not detected to be performed

const counterSubscriber = () => {
    const latestState = store.getState(); // available function for being generated by createStore
    console.log(latestState);
};

store.subscribe(counterSubscriber); // not executing, but only pointing the subscriber function
// execution is only done by reducer!

store.dispatch({ type: "increment" });
store.dispatch({ type: "decrement" });
